plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'br.com.interview'
version = '0.3.0-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

bootJar {
    classpath configurations.developmentOnly
    manifest {
        attributes('Implementation-Title': 'TechnicalApp',
                'Implementation-Version': archiveVersion)
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.4.1'
    implementation 'org.liquibase:liquibase-core:4.2.0'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.0'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.5.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    compileOnly 'javax.xml.bind:jaxb-api:2.3.1'
    runtimeOnly 'org.glassfish.jaxb:jaxb-runtime:3.0.0'
    compileOnly 'javax.activation:javax.activation-api:1.2.0'
	runtimeOnly 'org.postgresql:postgresql:42.2.18'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.4.0'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.4.0') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
	useJUnitPlatform()
}
