plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'br.com.interview'
version = '0.3.0-SNAPSHOT'
sourceCompatibility = '11'
def profiles = 'dev'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

bootJar {
    classpath configurations.developmentOnly
    manifest {
        attributes('Implementation-Title': 'TechnicalApp',
                'Implementation-Version': archiveVersion)
    }
}

bootRun {
    args = ["--spring.profiles.active=" + profiles]
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-jersey:2.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.4.0'
    implementation 'org.liquibase:liquibase-core:4.2.0'
	compileOnly 'org.projectlombok:lombok:1.18.16'
	developmentOnly 'org.springframework.boot:spring-boot-devtools:2.4.0'
	runtimeOnly 'org.postgresql:postgresql:42.2.18'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.4.0'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.4.0'
}

test {
	useJUnitPlatform()
}
